# Generated by Django 4.2.8 on 2023-12-19 14:47

from django.db import migrations, transaction
from faker import Faker
from employee.models import Employee
import random


def fill_employees(apps, schema_editor):
    fake = Faker()
    db_alias = schema_editor.connection.alias
    model = Employee
    choices = Employee.PostChoice.values
    with transaction.atomic():
        print('\nCreating employees')
        for i in range(1000):
            employees = model.objects.using(db_alias).all()
            employee = model.objects.using(db_alias).create(
                full_name=fake.name(), post=random.choice(choices),
                hire_date=fake.date_between(
                    start_date='-30y', end_date='today'),
                email=fake.email(),
                parent=random.choice(employees) if employees else None)
            print(f'{i + 1}. {employee}')
            employee.save()


def delete_employees(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    model = apps.get_model('employee', 'Employee')
    with transaction.atomic():
        print('\nCleaning employees:')
        for employee in model.objects.using(db_alias).all():
            print(employee)
            employee.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('employee', '0006_alter_employee_hire_date'),
    ]

    operations = [
        migrations.RunPython(fill_employees, reverse_code=delete_employees)
    ]
